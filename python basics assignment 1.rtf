{\rtf1\ansi\deff3\adeflang1025
{\fonttbl{\f0\froman\fprq2\fcharset0 Times New Roman;}{\f1\froman\fprq2\fcharset2 Symbol;}{\f2\fswiss\fprq2\fcharset0 Arial;}{\f3\froman\fprq2\fcharset0 Liberation Serif{\*\falt Times New Roman};}{\f4\froman\fprq2\fcharset0 Liberation Sans{\*\falt Arial};}{\f5\froman\fprq2\fcharset0 Liberation Mono{\*\falt Courier New};}{\f6\fmodern\fprq1\fcharset0 Liberation Mono{\*\falt Courier New};}{\f7\fnil\fprq0\fcharset0 monospace;}{\f8\froman\fprq2\fcharset128 Liberation Serif{\*\falt Times New Roman};}{\f9\fmodern\fprq1\fcharset0 NSimSun;}{\f10\fnil\fprq2\fcharset0 Arial;}{\f11\fnil\fprq2\fcharset0 Liberation Mono{\*\falt Courier New};}{\f12\fnil\fprq2\fcharset0 Liberation Serif{\*\falt Times New Roman};}}
{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255;\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;\red128\green0\blue128;\red128\green0\blue0;\red128\green128\blue0;\red128\green128\blue128;\red192\green192\blue192;\red32\green33\blue34;\red58\green58\blue58;\red32\green33\blue36;\red0\green169\blue51;\red255\green191\blue0;}
{\stylesheet{\s0\snext0\nowidctlpar\hyphpar0\cf0\kerning1\dbch\af10\langfe1081\dbch\af12\afs24\alang1033\loch\f3\fs24\lang1033 Normal;}
{\s4\sbasedon17\snext4\nowidctlpar\hyphpar0\sb120\sa120\keepn\cf0\b\kerning1\dbch\af10\langfe1081\dbch\af12\afs24\alang1033\loch\f4\fs28 Heading 4;}
{\*\cs15\snext15\b Strong Emphasis;}
{\*\cs16\snext16\dbch\af11\loch\f5 Source Text;}
{\s17\sbasedon0\snext18\nowidctlpar\hyphpar0\sb240\sa120\keepn\cf0\kerning1\dbch\af10\langfe1081\dbch\af12\afs24\alang1033\loch\f4\fs28 Heading;}
{\s18\sbasedon0\snext18\sl276\slmult1\nowidctlpar\hyphpar0\sb0\sa140\cf0\kerning1\dbch\af10\langfe1081\dbch\af12\afs24\alang1033\loch\f3\fs24 Text Body;}
{\s19\sbasedon18\snext19\sl276\slmult1\nowidctlpar\hyphpar0\sb0\sa140\cf0\kerning1\dbch\af10\langfe1081\dbch\af12\afs24\alang1033\loch\f3\fs24 List;}
{\s20\sbasedon0\snext20\nowidctlpar\hyphpar0\sb120\sa120\cf0\i\kerning1\dbch\af10\langfe1081\dbch\af12\afs24\alang1033\loch\f3\fs24 Caption;}
{\s21\sbasedon0\snext21\nowidctlpar\hyphpar0\cf0\kerning1\dbch\af10\langfe1081\dbch\af12\afs24\alang1033\loch\f3\fs24 Index;}
{\s22\sbasedon0\snext22\nowidctlpar\hyphpar0\cf0\kerning1\dbch\af10\langfe1081\dbch\af12\afs24\alang1033\loch\f3\fs24 Table Contents;}
{\s23\sbasedon22\snext23\qc\nowidctlpar\hyphpar0\cf0\b\kerning1\dbch\af10\langfe1081\dbch\af12\afs24\alang1033\loch\f3\fs24 Table Heading;}
{\s24\sbasedon0\snext24\nowidctlpar\hyphpar0\sb0\sa0\cf0\kerning1\dbch\af9\langfe1081\dbch\af6\afs20\alang1033\loch\f6\fs20 Preformatted Text;}
}{\*\generator Trio_Office/6.2.8.2$Windows_x86 LibreOffice_project/}{\info{\creatim\yr0\mo0\dy0\hr0\min0}{\revtim\yr2021\mo6\dy30\hr11\min59}{\printim\yr0\mo0\dy0\hr0\min0}}{\*\userprops}\deftab709
\hyphauto0\viewscale120
{\*\pgdsctbl
{\pgdsc0\pgdscuse451\pgwsxn12240\pghsxn15840\marglsxn1134\margrsxn1134\margtsxn1134\margbsxn1134\pgdscnxt0 Default Style;}}
\formshade{\*\pgdscno0}\paperh15840\paperw12240\margl1134\margr1134\margt1134\margb1134\sectd\sbknone\sectunlocked1\pgndec\pgwsxn12240\pghsxn15840\marglsxn1134\margrsxn1134\margtsxn1134\margbsxn1134\ftnbj\ftnstart1\ftnrstcont\ftnnar\aenddoc\aftnrstcont\aftnstart1\aftnnrlc
{\*\ftnsep\chftnsep}\pgndec\pard\plain \s0\nowidctlpar\hyphpar0\cf0\kerning1\dbch\af10\langfe1081\dbch\af12\afs24\alang1033\loch\f3\fs24\lang1033\qc{\rtlch \ltrch\loch
Python basics  Assignment 1}
\par \pard\plain \s0\nowidctlpar\hyphpar0\cf0\kerning1\dbch\af10\langfe1081\dbch\af12\afs24\alang1033\loch\f3\fs24\lang1033\qc\rtlch \ltrch\loch

\par \pard\plain \s0\nowidctlpar\hyphpar0\cf0\kerning1\dbch\af10\langfe1081\dbch\af12\afs24\alang1033\loch\f3\fs24\lang1033\ql{\rtlch \ltrch\loch
Q1.In the below elements which of them are values or an expression? eg:- values can be}
\par \pard\plain \s0\nowidctlpar\hyphpar0\cf0\kerning1\dbch\af10\langfe1081\dbch\af12\afs24\alang1033\loch\f3\fs24\lang1033\ql{\rtlch \ltrch\loch
integer or string and expressions will be mathematical operators.}
\par \pard\plain \s0\nowidctlpar\hyphpar0\cf0\kerning1\dbch\af10\langfe1081\dbch\af12\afs24\alang1033\loch\f3\fs24\lang1033\ql{\rtlch \ltrch\loch
*                               Expression}
\par \pard\plain \s0\nowidctlpar\hyphpar0\cf0\kerning1\dbch\af10\langfe1081\dbch\af12\afs24\alang1033\loch\f3\fs24\lang1033\ql{\rtlch \ltrch
\u8216\'91}{\rtlch \ltrch\loch
hello\u8217\'92     Value}
\par \pard\plain \s0\nowidctlpar\hyphpar0\cf0\kerning1\dbch\af10\langfe1081\dbch\af12\afs24\alang1033\loch\f3\fs24\lang1033\ql{\rtlch \ltrch\loch
-87.8                         Value}
\par \pard\plain \s0\nowidctlpar\hyphpar0\cf0\kerning1\dbch\af10\langfe1081\dbch\af12\afs24\alang1033\loch\f3\fs24\lang1033\ql{\rtlch \ltrch\loch
-                                Expression}
\par \pard\plain \s0\nowidctlpar\hyphpar0\cf0\kerning1\dbch\af10\langfe1081\dbch\af12\afs24\alang1033\loch\f3\fs24\lang1033\ql{\rtlch \ltrch\loch
/                                Expression}
\par \pard\plain \s0\nowidctlpar\hyphpar0\cf0\kerning1\dbch\af10\langfe1081\dbch\af12\afs24\alang1033\loch\f3\fs24\lang1033\ql{\rtlch \ltrch\loch
+                               Expression}
\par \pard\plain \s0\nowidctlpar\hyphpar0\cf0\kerning1\dbch\af10\langfe1081\dbch\af12\afs24\alang1033\loch\f3\fs24\lang1033\ql{\rtlch \ltrch\loch
6                               Value}
\par \pard\plain \s0\nowidctlpar\hyphpar0\cf0\kerning1\dbch\af10\langfe1081\dbch\af12\afs24\alang1033\loch\f3\fs24\lang1033\ql\rtlch \ltrch\loch

\par \pard\plain \s0\nowidctlpar\hyphpar0\cf0\kerning1\dbch\af10\langfe1081\dbch\af12\afs24\alang1033\loch\f3\fs24\lang1033\ql{\rtlch \ltrch\loch
2. What is the difference between string and variable?}
\par \pard\plain \s0\nowidctlpar\hyphpar0\cf0\kerning1\dbch\af10\langfe1081\dbch\af12\afs24\alang1033\loch\f3\fs24\lang1033\ql\rtlch \ltrch\loch

\par \pard\plain \s0\nowidctlpar\hyphpar0\cf0\kerning1\dbch\af10\langfe1081\dbch\af12\afs24\alang1033\loch\f3\fs24\lang1033\ql{\rtlch \ltrch\loch
A. }{\ul\ulc0\rtlch \ltrch\loch
Variable}{\rtlch \ltrch\loch
: It }{\scaps0\caps0\cf17\expnd0\expndtw0\i0\b0\rtlch \ltrch\loch
is something that holds a value that may change. In simplest terms, a variable is just a       box that you can put stuff in.}
\par \pard\plain \s0\nowidctlpar\hyphpar0\cf0\kerning1\dbch\af10\langfe1081\dbch\af12\afs24\alang1033\loch\f3\fs24\lang1033\ql\rtlch \ltrch\loch

\par \pard\plain \s0\nowidctlpar\hyphpar0\cf0\kerning1\dbch\af10\langfe1081\dbch\af12\afs24\alang1033\loch\f3\fs24\lang1033\ql{\scaps0\caps0\cf17\expnd0\expndtw0\i0\ul\ulc0\b0\rtlch \ltrch\loch
String}{\scaps0\caps0\cf17\expnd0\expndtw0\i0\b0\rtlch \ltrch\loch
: It is simply a list of characters in order. Character is anything you can type on the keyboard in one keystroke, like a letter or number.}
\par \pard\plain \s0\nowidctlpar\hyphpar0\cf0\kerning1\dbch\af10\langfe1081\dbch\af12\afs24\alang1033\loch\f3\fs24\lang1033\ql\rtlch \ltrch\loch

\par \pard\plain \s0\nowidctlpar\hyphpar0\cf0\kerning1\dbch\af10\langfe1081\dbch\af12\afs24\alang1033\loch\f3\fs24\lang1033\ql{\rtlch \ltrch\loch
3. Describe three different data types.}
\par \pard\plain \s4\nowidctlpar\hyphpar0\sb120\sa120\keepn\cf0\b\kerning1\dbch\af10\langfe1081\dbch\af12\afs24\alang1033\loch\f4\fs28\ql{{\*\bkmkstart 1_Numbers}{\*\bkmkend 1_Numbers}\scaps0\caps0\cf1\expnd0\expndtw0\i0\b0\dbch\af12\rtlch \ltrch\loch
A. }{\scaps0\caps0\cf1\expnd0\expndtw0\i0\ul\ulc0\b0\dbch\af12\rtlch \ltrch\loch
Numbers}
\par \pard\plain \s18\sl276\slmult1\nowidctlpar\hyphpar0\sb0\sa140\cf0\kerning1\dbch\af10\langfe1081\dbch\af12\afs24\alang1033\loch\f3\fs24\sl276\slmult1\widctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0{\scaps0\caps0\cf18\expnd0\expndtw0\i0\b0\dbch\af12\rtlch \ltrch\loch\fs24
In Numbers, there are mainly 3 types which include Integer, Float, and Complex.}
\par \pard\plain \s18\sl276\slmult1\nowidctlpar\hyphpar0\sb0\sa140\cf0\kerning1\dbch\af10\langfe1081\dbch\af12\afs24\alang1033\loch\f3\fs24\sl276\slmult1\widctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0{\scaps0\caps0\cf18\expnd0\expndtw0\i0\b0\dbch\af12\rtlch \ltrch\loch\fs24
These 3 are defined as a class in python. In order to find to which class the variable belongs to you can use type () function.}
\par \pard\plain \s4\nowidctlpar\hyphpar0\sb120\sa120\keepn\cf0\b\kerning1\dbch\af10\langfe1081\dbch\af12\afs24\alang1033\loch\f4\fs28{{\*\bkmkstart 2_String}{\*\bkmkend 2_String}\cs15\b\scaps0\caps0\cf1\expnd0\expndtw0\i0\ul\ulc0\b0\dbch\af12\rtlch \ltrch\loch
String}
\par \pard\plain \s18\sl276\slmult1\nowidctlpar\hyphpar0\sb0\sa140\cf0\kerning1\dbch\af10\langfe1081\dbch\af12\afs24\alang1033\loch\f3\fs24\sl276\slmult1\widctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0{\scaps0\caps0\cf18\expnd0\expndtw0\i0\b0\dbch\af12\rtlch \ltrch\loch\fs24
A string is an ordered sequence of characters.}
\par \pard\plain \s18\sl276\slmult1\nowidctlpar\hyphpar0\sb0\sa140\cf0\kerning1\dbch\af10\langfe1081\dbch\af12\afs24\alang1033\loch\f3\fs24\sl276\slmult1\widctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0{\scaps0\caps0\cf18\expnd0\expndtw0\i0\b0\dbch\af12\rtlch \ltrch\loch\fs24
We can use single quotes or double quotes to represent strings. Multi-line strings can be represented using triple quote.}
\par \pard\plain \s18\sl276\slmult1\nowidctlpar\hyphpar0\sb0\sa140\cf0\kerning1\dbch\af10\langfe1081\dbch\af12\afs24\alang1033\loch\f3\fs24\sl276\slmult1\widctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0{\scaps0\caps0\cf18\expnd0\expndtw0\i0\b0\dbch\af12\rtlch \ltrch\loch\fs24
Strings are immutable which means once we declare a string we can\u8217\'92t update the already declared string.}
\par \pard\plain \s4\nowidctlpar\hyphpar0\sb120\sa120\keepn\cf0\b\kerning1\dbch\af10\langfe1081\dbch\af12\afs24\alang1033\loch\f4\fs28{{\*\bkmkstart 3_List}{\*\bkmkend 3_List}\cs15\b\scaps0\caps0\cf1\expnd0\expndtw0\i0\ul\ulc0\b0\dbch\af12\rtlch \ltrch\loch
List}
\par \pard\plain \s18\sl276\slmult1\nowidctlpar\hyphpar0\sb0\sa140\cf0\kerning1\dbch\af10\langfe1081\dbch\af12\afs24\alang1033\loch\f3\fs24\sl276\slmult1\widctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0{\scaps0\caps0\cf18\expnd0\expndtw0\i0\b0\dbch\af12\rtlch \ltrch\loch\fs24
A list can contain a series of values.}
\par \pard\plain \s18\sl276\slmult1\nowidctlpar\hyphpar0\sb0\sa140\cf0\kerning1\dbch\af10\langfe1081\dbch\af12\afs24\alang1033\loch\f3\fs24\sl276\slmult1\widctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0{\scaps0\caps0\cf18\expnd0\expndtw0\i0\b0\dbch\af12\rtlch \ltrch\loch\fs24
List variables are declared by using brackets [ ]. A list is mutable, which means we can modify the list.}
\par \pard\plain \s18\sl276\slmult1\nowidctlpar\hyphpar0\sb0\sa140\cf0\kerning1\dbch\af10\langfe1081\dbch\af12\afs24\alang1033\loch\f3\fs24\sl276\slmult1\rtlch \ltrch\loch

\par \pard\plain \s0\nowidctlpar\hyphpar0\cf0\kerning1\dbch\af10\langfe1081\dbch\af12\afs24\alang1033\loch\f3\fs24\lang1033\ql{\rtlch \ltrch\loch
4. What is an expression made up of? What do all expressions do?}
\par \pard\plain \s0\nowidctlpar\hyphpar0\cf0\kerning1\dbch\af10\langfe1081\dbch\af12\afs24\alang1033\loch\f3\fs24\lang1033\ql\rtlch \ltrch\loch

\par \pard\plain \s0\nowidctlpar\hyphpar0\cf0\kerning1\dbch\af10\langfe1081\dbch\af12\afs24\alang1033\loch\f3\fs24\lang1033\ql{\rtlch \ltrch\loch
A. }{\scaps0\caps0\cf19\expnd0\expndtw0\i0\b0\rtlch \ltrch\loch
An expression is a combination of values, variables, operators, and calls functions. Expressions need to be evaluated. If you ask Python to print an expression, the interpreter evaluates the expression and displays the result.}{\rtlch \ltrch\loch
 }
\par \pard\plain \s0\nowidctlpar\hyphpar0\cf0\kerning1\dbch\af10\langfe1081\dbch\af12\afs24\alang1033\loch\f3\fs24\lang1033\ql\rtlch \ltrch\loch

\par \pard\plain \s0\nowidctlpar\hyphpar0\cf0\kerning1\dbch\af10\langfe1081\dbch\af12\afs24\alang1033\loch\f3\fs24\lang1033\ql\rtlch \ltrch\loch

\par \pard\plain \s0\nowidctlpar\hyphpar0\cf0\kerning1\dbch\af10\langfe1081\dbch\af12\afs24\alang1033\loch\f3\fs24\lang1033\ql{\rtlch \ltrch\loch
5. This assignment statements, like spam = 10. What is the difference between an}
\par \pard\plain \s0\nowidctlpar\hyphpar0\cf0\kerning1\dbch\af10\langfe1081\dbch\af12\afs24\alang1033\loch\f3\fs24\lang1033\ql{\rtlch \ltrch\loch
expression and a statement?}
\par \pard\plain \s0\nowidctlpar\hyphpar0\cf0\kerning1\dbch\af10\langfe1081\dbch\af12\afs24\alang1033\loch\f3\fs24\lang1033\ql{\rtlch \ltrch\loch
A. }{\scaps0\caps0\cf19\expnd0\expndtw0\i0\b0\rtlch \ltrch\loch
An expression evaluates to a value. A statement does something. Statements represent an action or command e.g print statements, assignment statements. Expression is a combination of variables, operations and values that yields a result value.}{\rtlch \ltrch\loch
 }
\par \pard\plain \s0\nowidctlpar\hyphpar0\cf0\kerning1\dbch\af10\langfe1081\dbch\af12\afs24\alang1033\loch\f3\fs24\lang1033\ql\rtlch \ltrch\loch

\par \pard\plain \s0\nowidctlpar\hyphpar0\cf0\kerning1\dbch\af10\langfe1081\dbch\af12\afs24\alang1033\loch\f3\fs24\lang1033\ql{\rtlch \ltrch\loch
6. After running the following code, what does the variable bacon contain?}
\par \pard\plain \s0\nowidctlpar\hyphpar0\cf0\kerning1\dbch\af10\langfe1081\dbch\af12\afs24\alang1033\loch\f3\fs24\lang1033\ql{\rtlch \ltrch\loch
bacon = 22}
\par \pard\plain \s0\nowidctlpar\hyphpar0\cf0\kerning1\dbch\af10\langfe1081\dbch\af12\afs24\alang1033\loch\f3\fs24\lang1033\ql{\rtlch \ltrch\loch
bacon + 1}
\par \pard\plain \s0\nowidctlpar\hyphpar0\cf0\kerning1\dbch\af10\langfe1081\dbch\af12\afs24\alang1033\loch\f3\fs24\lang1033\ql{\rtlch \ltrch\loch
A. 22}
\par \pard\plain \s0\nowidctlpar\hyphpar0\cf0\kerning1\dbch\af10\langfe1081\dbch\af12\afs24\alang1033\loch\f3\fs24\lang1033\ql\rtlch \ltrch\loch

\par \pard\plain \s0\nowidctlpar\hyphpar0\cf0\kerning1\dbch\af10\langfe1081\dbch\af12\afs24\alang1033\loch\f3\fs24\lang1033\ql{\rtlch \ltrch\loch
7. What should the values of the following two terms be?}
\par \pard\plain \s0\nowidctlpar\hyphpar0\cf0\kerning1\dbch\af10\langfe1081\dbch\af12\afs24\alang1033\loch\f3\fs24\lang1033\ql\rtlch \ltrch\loch

\par \pard\plain \s0\nowidctlpar\hyphpar0\cf0\kerning1\dbch\af10\langfe1081\dbch\af12\afs24\alang1033\loch\f3\fs24\lang1033\ql{\rtlch \ltrch
\u8216\'91}{\rtlch \ltrch\loch
spam\u8217\'92 + \u8216\'91spamspam\u8217\'92                       }{{\*\bkmkstart __DdeLink__124_3456904518}\rtlch \ltrch\loch
 \u8216\'91}{\rtlch \ltrch\loch{\*\bkmkend __DdeLink__124_3456904518}
spamspamspam\u8217\'92}
\par \pard\plain \s0\nowidctlpar\hyphpar0\cf0\kerning1\dbch\af10\langfe1081\dbch\af12\afs24\alang1033\loch\f3\fs24\lang1033\ql{\rtlch \ltrch
\u8216\'91}{\rtlch \ltrch\loch
spam\u8217\'92* 3                                           \u8216\'91}{\rtlch \ltrch\loch
spamspamspam\u8217\'92}
\par \pard\plain \s0\nowidctlpar\hyphpar0\cf0\kerning1\dbch\af10\langfe1081\dbch\af12\afs24\alang1033\loch\f3\fs24\lang1033\ql{\rtlch \ltrch
   }
\par \pard\plain \s0\nowidctlpar\hyphpar0\cf0\kerning1\dbch\af10\langfe1081\dbch\af12\afs24\alang1033\loch\f3\fs24\lang1033\ql{\rtlch \ltrch\loch
8. Why is eggs a valid variable name while 100 is invalid?}
\par \pard\plain \s0\nowidctlpar\hyphpar0\cf0\kerning1\dbch\af10\langfe1081\dbch\af12\afs24\alang1033\loch\f3\fs24\lang1033\ql{\rtlch \ltrch\loch
A.  Because 100 is the integer. Variable names cannot began with integer value.}
\par \pard\plain \s0\nowidctlpar\hyphpar0\cf0\kerning1\dbch\af10\langfe1081\dbch\af12\afs24\alang1033\loch\f3\fs24\lang1033\ql\rtlch \ltrch\loch

\par \pard\plain \s0\nowidctlpar\hyphpar0\cf0\kerning1\dbch\af10\langfe1081\dbch\af12\afs24\alang1033\loch\f3\fs24\lang1033\ql{\rtlch \ltrch\loch
9. What three functions can be used to get the integer, floating-point number, or string}
\par \pard\plain \s0\nowidctlpar\hyphpar0\cf0\kerning1\dbch\af10\langfe1081\dbch\af12\afs24\alang1033\loch\f3\fs24\lang1033\ql{\rtlch \ltrch\loch
version of a value?}
\par \pard\plain \s0\nowidctlpar\hyphpar0\cf0\kerning1\dbch\af10\langfe1081\dbch\af12\afs24\alang1033\loch\f3\fs24\lang1033\ql{\rtlch \ltrch\loch
A. int()}
\par \pard\plain \s0\nowidctlpar\hyphpar0\cf0\kerning1\dbch\af10\langfe1081\dbch\af12\afs24\alang1033\loch\f3\fs24\lang1033\ql{\rtlch \ltrch
     }{\rtlch \ltrch\loch
float()}
\par \pard\plain \s0\nowidctlpar\hyphpar0\cf0\kerning1\dbch\af10\langfe1081\dbch\af12\afs24\alang1033\loch\f3\fs24\lang1033\ql{\rtlch \ltrch
      }{\rtlch \ltrch\loch
str()}
\par \pard\plain \s0\nowidctlpar\hyphpar0\cf0\kerning1\dbch\af10\langfe1081\dbch\af12\afs24\alang1033\loch\f3\fs24\lang1033\ql\rtlch \ltrch\loch

\par \pard\plain \s0\nowidctlpar\hyphpar0\cf0\kerning1\dbch\af10\langfe1081\dbch\af12\afs24\alang1033\loch\f3\fs24\lang1033\ql{\rtlch \ltrch\loch
10. Why does this expression cause an error? How can you fix it?}
\par \pard\plain \s0\nowidctlpar\hyphpar0\cf0\kerning1\dbch\af10\langfe1081\dbch\af12\afs24\alang1033\loch\f3\fs24\lang1033\ql{\rtlch \ltrch
 \u8216\'91}{\rtlch \ltrch\loch
I have eaten\u8217\'92 + 99 + \u8216\'91burritos\u8217\'92}
\par \pard\plain \s0\nowidctlpar\hyphpar0\cf0\kerning1\dbch\af10\langfe1081\dbch\af12\afs24\alang1033\loch\f3\fs24\lang1033\ql{\rtlch \ltrch\loch
A. }{\scaps0\caps0\cf1\expnd0\expndtw0\i0\b0\afs24\rtlch \ltrch\loch\fs24\loch\f8\hich\af8
can only concatenate str (not "int") to str}
\par \pard\plain \s0\nowidctlpar\hyphpar0\cf0\kerning1\dbch\af10\langfe1081\dbch\af12\afs24\alang1033\loch\f3\fs24\lang1033\ql{\scaps0\caps0\cf1\expnd0\expndtw0\i0\b0\afs24\rtlch \ltrch\loch\fs24\loch\f8\hich\af8
correction}
\par \pard\plain \s24\nowidctlpar\hyphpar0\sb0\sa0\cf0\kerning1\dbch\af9\langfe1081\dbch\af6\afs20\alang1033\loch\f6\fs20\ql{\scaps0\caps0\cf1\expnd0\expndtw0\i0\b0\afs24\rtlch \ltrch\loch\fs24\loch\f8\hich\af8
'I have eaten' + str(99)+ 'burritos'}
\par \pard\plain \s0\nowidctlpar\hyphpar0\cf0\kerning1\dbch\af10\langfe1081\dbch\af12\afs24\alang1033\loch\f3\fs24\lang1033\ql\rtlch \ltrch\loch

\par \pard\plain \s18\sl276\slmult1\nowidctlpar\hyphpar0\sb0\sa140\cf0\kerning1\dbch\af10\langfe1081\dbch\af12\afs24\alang1033\loch\f3\fs24\sl276\slmult1\sb0\sa140{\rtlch \ltrch\loch
\line }
\par }